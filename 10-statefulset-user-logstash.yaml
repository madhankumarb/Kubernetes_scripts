apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: disk
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
  zone: us-central1-a
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: user-ws
  name: user-ws
  namespace: default
spec:
  serviceName: user-ws
  replicas: 3
  updateStrategy:
    type: RollingUpdate  
  selector:
    matchLabels:
      app: user-ws
  template:
    metadata:
      labels:
        app: user-ws
    spec:
      containers:
      - name: user-ws
        image: madhanbadridocker/users-microservice:0.0.3 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8014			
        env:
        - name: spring.profiles.active
          value: k8s
        - name: spring.rabbitmq.host
          value: rabbit-mq
        - name: spring.rabbitmq.username
          valueFrom:
            configMapKeyRef:
              key: spring.rabbitmq.username
              name: config-server-config
        - name: spring.rabbitmq.password
          valueFrom: 
            secretKeyRef:
              key: spring.rabbitmq.password
              name: config-server-secrets			  
        - name: spring.cloud.config.uri
          value: http://config-server:8012		
        volumeMounts:
        - name: api-logs-users
          mountPath: /api-logs
      - name: logstash
        image: madhanbadridocker/users-microservice-logstash:0.0.2	  
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5044	
        volumeMounts:
        - name: api-logs-users
          mountPath: /api-logs
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: api-logs-users
#      annotations:
#        volume.beta.kubernetes.io/storage-class: disk
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: disk		  
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-ws
  name: user-ws
  namespace: default
spec:
  ports:
  - name: "8014"
    port: 8014
    protocol: TCP	
    targetPort: 8014	
  selector:
    app: user-ws
  sessionAffinity: None
  type: NodePort	  